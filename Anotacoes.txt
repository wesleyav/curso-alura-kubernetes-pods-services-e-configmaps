Kubernetes é um orquestrador

Cria e gerencia clusters que são compostos por uma ou mais máquinas trabalhando em conjunto 

Possui recursos (resources) prontos para utilização:
 - pod
 - rs
 - deploy
 - vol
 - hpa
 - pv
 - ing
 - pvc
 - svc
 - sc
 - ds
 - quota

As máquinas de um cluster podem ser:

Master
 - gerenciar o cluster
 - manter e atualizar o estado desejado
 - receber e executar novos comandos

 - Componentes (Control Plane)
   - api - receber e executar novos comandos (API REST)
   - c-m - manter e atualizar o estado desejado
   - sched - onde determinado código será executado no cluster
   - etcd - armazena todos os dados vitais do cluster através de um banco de dados chave/valor

Node
 - executar as aplicações

 - Componentes (Nodes)
   - kubelet- executa os pods dentro dos nodes
   - k-proxy - comunicação dentro do cluster


Ferramenta
kubectl - criar, ler, atualizar e remover os dados dos clusters, componentes, recursos etc.

Pode ser declarativo ou imperativo, por arquivos de definição ou executar comandos.

#################################################

# Donwload do Docker for Windows 2.3.3.2
# https://desktop.docker.com/win/edge/46784/Docker%20Desktop%20Installer.exe

# Abrir o docker e em configurações ativar a opção "kubernetes".

# Abrir o PowerShell

# Visualizar informações do cluster
$ kubectl get nodes

#################################################

# Instalando no Linux

# Seguir os passos em:

# Kubernetes
# kubernetes.io/docs/tasks/tools/install-kubectl/

# Minikube
# kubernetes.io/docs/tasks/tools/install-minikube/

# Virtualbox
# virtualbox.org/wiki/Linux_Downloads
# Versão 6.1.12

#################################################

Pods
 - cápsula que pode conter um ou mais containers
 - possui ip atribuído
 - compartilha ip no pod, porta diferente para cada container
 - pods são efêmeros
 - compartilham namespaces de rede e IPC
 - podem compartilhar volumes

#################################################

# Criar um pod
$ kubectl run nginx-pod --image=nginx:latest

# Visualizar informações do pod
$ kubectl get pods

# Visualizar informações do pod em tempo real
$ kubectl get pods --watch

# Exibir detalhes do pod
$ kubectl describe pod nginx-pod

# Editar um pod (vai abrir um notepad com o arquido, alterar versão do ngix de - image: nginx:latest para - image: nginx:1.0)
$ kubectl edit pod nginx-pod

# Vai gerar erro de versão não encontrada

#################################################

# Criar a pasta Kubernetes-Alura
# Dentro dela criar o arquivo primeiro-pod.yaml

# Acessar essa pasta no Power Shell

# Aplicar o arquivo
$ kubectl apply -f .\primeiro-pod.yaml

# Visualizar informações do pod
$ kubectl get pods

# Visualizar informações do pod em tempo real
$ kubectl get pods --watch

# Exibir detalhes do pod
$ kubectl describe pod nginx-pod

#################################################

Para saber mais: Validando YAML

Caso enfrente dificuldades para criação do YAML e alguns erros de validação estejam aparecendo, além de recorrer ao fórum, você também pode utilizar o validador do site kubeyaml para te auxiliar com os possíveis erros e validações do seu arquivo.	

https://kubeyaml.com/

#################################################

# Parar pod criado de forma interativa
# kubectl delete pod + nome
$ kubectl delete pod nginx-pod

# Visualizar informações do pod
$ kubectl get pods

# Parar pod criado de forma declarativa
# kubectl delete -f + nome
$ kubectl delete -f .\primeiro-pod.yaml

# Criar na pasta Kubernetes-Alura o arquivo portal-noticias.yaml

# Aplicar o arquivo
$ kubectl apply -f .\portal-noticias.yaml

# Visualizar informações do pod em tempo real
$ kubectl get pods --watch

# Exibir detalhes do pod
$ kubectl describe pod nome-do-pod
$ kubectl describe pod portal-noticias

# Verificar se tudo que está dentro do pod está funcionando de forma correta:
# kubectl exec -it nomo-do-pod -- bash
$ kubectl exec -it portal-noticias -- bash

# Enviar uma requisição para o localhost
$ curl localhost

#################################################

# Visualizar informações com saída formatada em tipo wide
$ kubectl get pods -o wide

# Apagar o arquivo
$ kubectl delete -f .\portal-noticias.yaml

SVC
 - abstrações para expor aplicações executando um ou mais pods
 - provêem ip´s fixos para comunicação
 - provêem um dns para um ou mais pods
 - são capazes de fazer balanceamento de carga

SVC possui 3 tipos:

 - ClusterIP
 - NodePort
 - LoadBalancer

#################################################

# Aplicar o arquivo
$ kubectl apply -f .\pod-1.yaml

# Aplicar o arquivo
$ kubectl apply -f .\pod-2.yaml

# Exibir detalhes do pod
$ kubectl describe pod nome-do-pod
$ kubectl describe pod pod-2

# Aplicar o arquivo
$ kubectl apply -f .\svc-pod-2.yaml

# Visualizar informações do svc
$ kubectl get svc

# Visualizar informações do pod
$ kubectl get pods

# Verificar se tudo que está dentro do pod está funcionando de forma correta:
# kubectl exec -it nomo-do-pod -- bash
$ kubectl exec -it pod-1 -- bash

# Enviar uma requisição para o svc-pod-2
$ curl localhost 10.100.224.84:80

# Apagar o arquivo
$ kubectl delete -f .\pod-2.yaml

# Aplicar o arquivo
$ kubectl apply -f .\svc-pod-2.yaml

# Visualizar informações com saída formatada em tipo wide
$ kubectl get pods -o wide

#################################################

# Aplicar o arquivo
$ kubectl apply -f .\svc-pod-1.yaml

# Aplicar o arquivo
$ kubectl apply -f .\svc-pod-2.yaml

# Aplicar o arquivo
$ kubectl apply -f .\pod-1.yaml

# Visualizar informações do svc
$ kubectl get svc

# Verificar se tudo que está dentro do pod está funcionando de forma correta:
# kubectl exec -it nomo-do-pod -- bash
$ kubectl exec -it portal-noticias -- bash

# Enviar uma requisição para o NodePort
$ curl localhost 10.104.53.142:80

# Visualizar informações com saída formatada em tipo wide
$ kubectl get nodes -o wide

# Acessar no navegador
# http://localhost:32529/

#################################################

# Visualizar informações do pod
$ kubectl get pods

# Remover todos os pods
$ kubectl delete pods --all

# Remover todos os serviços
$ kubectl delete svc --all

# Aplicar o arquivo
$ kubectl apply -f .\portal-noticias.yaml

# Aplicar o arquivo
$ kubectl apply -f .\svc-portal-noticias.yaml

# Acessar no navegador
# http://localhost:30000/

#################################################

# Aplicar o arquivo
$ kubectl apply -f .\sistema-noticias.yaml

# Aplicar o arquivo
$ kubectl apply -f .\svc-sistema-noticias.yaml

# Visualizar informações do pod
$ kubectl get pods

# Acessar no navegador
# http://localhost:30001/

#################################################

# Aplicar o arquivo
$ kubectl apply -f .\db-noticias.yaml

# Aplicar o arquivo
$ kubectl apply -f .\svc-db-noticias.yaml

# Visualizar informações dos serviços
$ kubectl get svc

# Visualizar informações do pod
$ kubectl get pods

# Exibir detalhes do pod
$ kubectl describe pods nome-do-pod
$ kubectl describe pods db-noticias

#################################################

# Apagar o pod
$ kubectl delete pod db-noticias

# Aplicar o arquivo
$ kubectl apply -f .\db-noticias.yaml

# Visualizar informações do pod
$ kubectl get pods

# Verificar se tudo que está dentro do pod está funcionando de forma correta:
# kubectl exec -it nomo-do-pod -- bash
$ kubectl exec -it db-noticias -- bash

# Acessar banco MySQL
$ mysql -u root -p

#################################################